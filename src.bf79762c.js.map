{"version":3,"sources":["index.js"],"names":["days","document","querySelector","hours","mins","secs","CountdownTimer","selector","targetDate","onTick","time","getTimeComponents","startDate","Date","intervalId","setInterval","currentTime","now","deltaTime","deltaTim","clearInterval","value","String","padStart","pad","Math","floor","timer","updateClockface","textContent","start"],"mappings":";AA8DA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA7DA,IAAMA,EAAOC,SAASC,cAAc,6BAC9BC,EAAQF,SAASC,cAAc,8BAC/BE,EAAOH,SAASC,cAAc,6BAC9BG,EAAOJ,SAASC,cAAc,6BAE9BI,EAAAA,WAC4C,SAAA,EAAA,GAAhCC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,OAAU,EAAA,KAAA,GACrCF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAEbC,KAAAA,OAASA,EAmDtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAhDW,MAAA,WACGC,IAAAA,EAAO,KAAKC,kBAAkB,GAC/BF,KAAAA,OAAOC,KA8CpB,CAAA,IAAA,QA3CY,MAAA,WAAA,IAAA,EAAA,KACEE,EAAY,IAAIC,KAAK,KAAKL,YAE3BM,KAAAA,WAAaC,YAAY,WACpBC,IAAAA,EAAcH,KAAKI,MACnBC,EAAYN,EAAYI,EACxBN,EAAO,EAAKC,kBAAkBO,GACpC,EAAKT,OAAOC,IACb,OAmCX,CAAA,IAAA,OAhCW,MAAA,WACCS,SAAW,GACXC,cAAc,KAAKN,cA8B/B,CAAA,IAAA,MA3BQO,MAAAA,SAAAA,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OA0BzC,CAAA,IAAA,oBAvBsBb,MAAAA,SAAAA,GAKP,MAAA,CAAEV,KAJI,KAAKwB,IAAIC,KAAKC,MAAMhB,EAAQ,QAI1BP,MAHD,KAAKqB,IAAIC,KAAKC,MAAOhB,EAAQ,MAAyB,OAG9CN,KAFT,KAAKoB,IAAIC,KAAKC,MAAOhB,EAAQ,KAAoB,MAElCL,KADf,KAAKmB,IAAIC,KAAKC,MAAOhB,EAAQ,IAAc,WAmBhE,EAxDMJ,GA4CAqB,EAAQ,IAAIrB,EAAe,CAC7BC,SAAU,WACVC,WAAY,IAAIK,KAAK,gBACrBJ,OAAQmB,IAEZ,SAASA,EAAgBlB,GACrBV,EAAK6B,YAAiBnB,GAAAA,OAAAA,EAAKV,MAC3BG,EAAM0B,YAAiBnB,GAAAA,OAAAA,EAAKP,OAC5BC,EAAKyB,YAAiBnB,GAAAA,OAAAA,EAAKN,MAC3BC,EAAKwB,YAAiBnB,GAAAA,OAAAA,EAAKL,MAG/BsB,EAAMG","file":"src.bf79762c.js","sourceRoot":"../src","sourcesContent":["\nconst days = document.querySelector('.value[data-value=\"days\"]');\nconst hours = document.querySelector('.value[data-value=\"hours\"]');\nconst mins = document.querySelector('.value[data-value=\"mins\"]');\nconst secs = document.querySelector('.value[data-value=\"secs\"]');\n\nclass CountdownTimer {\n    constructor({ selector, targetDate, onTick }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        intervalId: null;\n        this.onTick = onTick;\n    }\n\n    init() {\n        const time = this.getTimeComponents(0);\n        this.onTick(time);\n    }\n\n    start() {\n        const startDate = new Date(this.targetDate);\n\n        this.intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = startDate - currentTime;\n            const time = this.getTimeComponents(deltaTime);\n            this.onTick(time);\n        }, 1000);\n    }\n\n    stop() {\n        if (deltaTim < 0) {\n            clearInterval(this.intervalId);\n        }\n    }\n    pad(value) {\n        return String(value).padStart(2, '0');\n    }\n\n    getTimeComponents(time) {\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n        return { days, hours, mins, secs };\n\n    }\n}\n\n\nconst timer = new CountdownTimer({\n    selector: \"#timer-1\",\n    targetDate: new Date(\"Nov 21, 2020\"),\n    onTick: updateClockface,\n});\nfunction updateClockface(time) {\n    days.textContent = `${time.days}`;\n    hours.textContent = `${time.hours}`;\n    mins.textContent = `${time.mins}`;\n    secs.textContent = `${time.secs}`;\n}\n\ntimer.start();\n\n\n\n\n\n\n\n\n\n\n"]}